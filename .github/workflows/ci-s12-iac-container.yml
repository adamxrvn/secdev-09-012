name: S12 - IaC & Container Security
on:
  workflow_dispatch:
  push:
    paths:
      - 'Dockerfile'
      - 'iac/**'
      - '.github/workflows/ci-s12-iac-container.yml'
jobs:
  s12:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write 
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Ensure evidence dirs
        run: mkdir -p EVIDENCE/S12

      - name: Build Docker image
        run: docker build -t s09s12-app:ci .

      - name: Hadolint Dockerfile (JSON)
        run: |
          docker run --rm -i hadolint/hadolint hadolint -f json - < Dockerfile > EVIDENCE/S12/hadolint.json || true

      - name: Checkov (iac/)
        run: |
          docker run --rm -v $PWD:/src bridgecrew/checkov:latest -d /src/iac -o json > EVIDENCE/S12/checkov.json || true
      - name: Trivy image (JSON)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 's09s12-app:ci'
          format: 'json'
          output: 'EVIDENCE/S12/trivy.json'
          ignore-unfixed: true
          severity: 'HIGH,CRITICAL'
          
      - uses: actions/upload-artifact@v4
        with:
          name: S12_EVIDENCE
          path: EVIDENCE/S12




#       COSIGNING with PUSH TO GHCR
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push image
        run: |
          IMAGE=ghcr.io/${{ github.repository }}/s09s12-app:ci
          docker build -t $IMAGE .
          docker push $IMAGE
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.5.0

      - name: Cosign sign image (keyless)
        run: cosign sign -y $IMAGE

      - name: Verify image signature
        run: cosign verify --certificate-identity-regexp "https://github.com/${{ github.repository }}" --certificate-oidc-issuer "https://token.actions.githubusercontent.com" $IMAGE

      - name: Generate Cosign attestation
        run: |
          mkdir -p EVIDENCE/S12
          cosign attest -y \
            --predicate-type=https://slsa.dev/provenance/v1 \
            --predicate <(echo '{"buildType":"github-actions","builder":"${{ github.actor }}","repository":"${{ github.repository }}","workflow":"${{ github.workflow }}"}') \
            --output-file EVIDENCE/S12/attestation.json \
            $IMAGE
